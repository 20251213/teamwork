// Example testing sketch for various DHT humidity/temperature sensors
// Written by ladyada, public domain

// REQUIRES the following Arduino libraries:
// - DHT Sensor Library: https://github.com/adafruit/DHT-sensor-library
// - Adafruit Unified Sensor Lib: https://github.com/adafruit/Adafruit_Sensor

#include "DHT.h"
#include"Arduino.h"

#define DHTPIN 2     // Digital pin connected to the DHT sensor
// Feather HUZZAH ESP8266 note: use pins 3, 4, 5, 12, 13 or 14 --
// Pin 15 can work but DHT must be disconnected during program upload.

// Uncomment whatever type you're using!
#define DHTTYPE DHT11   // DHT 11
//#define DHTTYPE DHT22   // DHT 22  (AM2302), AM2321
//#define DHTTYPE DHT21   // DHT 21 (AM2301)

// Connect pin 1 (on the left) of the sensor to +5V
// NOTE: If using a board with 3.3V logic like an Arduino Due connect pin 1
// to 3.3V instead of 5V!
// Connect pin 2 of the sensor to whatever your DHTPIN is
// Connect pin 3 (on the right) of the sensor to GROUND (if your sensor has 3 pins)
// Connect pin 4 (on the right) of the sensor to GROUND and leave the pin 3 EMPTY (if your sensor has 4 pins)
// Connect a 10K resistor from pin 2 (data) to pin 1 (power) of the sensor

// Initialize DHT sensor.
// Note that older versions of this library took an optional third parameter to
// tweak the timings for faster processors.  This parameter is no longer needed
// as the current DHT reading algorithm adjusts itself to work on faster procs.
DHT dht(DHTPIN, DHTTYPE);
// 初始延迟时间（中等速度）  
float MEDIUM_BLINK_DELAY = 300; // 毫秒  
// 温度变化时延迟时间的调整量  
float TEMP_CHANGE_ADJUSTMENT = 50; // 毫秒 
  
float previousTemperature = 0.0; // 初始化为0或无效值 



void setup() {
  Serial.begin(9600);
  pinMode(LED_BUILTIN, OUTPUT);
  Serial.println(F("12组"));

  dht.begin();
}

void loop() {
  // Wait a few seconds between measurements.
  delay(2000);

  // Reading temperature or humidity takes about 250 milliseconds!
  // Sensor readings may also be up to 2 seconds 'old' (its a very slow sensor)
  float h = dht.readHumidity();
  // Read temperature as Celsius (the default)
  float t = dht.readTemperature();
  // Read temperature as Fahrenheit (isFahrenheit = true)
  float f = dht.readTemperature(true);

  // Check if any reads failed and exit early (to try again).
  if (isnan(h) || isnan(t) || isnan(f)) {
    Serial.println(F("Failed to read from DHT sensor!"));
    return;
  }
  // 比较当前温度与上一个温度  
  if (t > previousTemperature) {  
    // 温度上升，闪烁变快  
    // 可以减少延迟时间，但注意不要小于某个最小值  
    MEDIUM_BLINK_DELAY = max(MEDIUM_BLINK_DELAY - TEMP_CHANGE_ADJUSTMENT, 50); // 假设最小延迟为50毫秒  
  } else if (t < previousTemperature) {  
    // 温度下降，闪烁变慢  
    // 可以增加延迟时间，但注意不要大于某个最大值  
    MEDIUM_BLINK_DELAY = min(MEDIUM_BLINK_DELAY + TEMP_CHANGE_ADJUSTMENT, 1000); // 假设最大延迟为1000毫秒  
  } 
  // 更新上一个温度值  
  previousTemperature = t;
  
  // 闪烁LED  
  digitalWrite(LED_BUILTIN, HIGH);  
  delay(MEDIUM_BLINK_DELAY);  
  digitalWrite(LED_BUILTIN, LOW);  
  delay(MEDIUM_BLINK_DELAY);  

  // Compute heat index in Fahrenheit (the default)
  float hif = dht.computeHeatIndex(f, h);
  // Compute heat index in Celsius (isFahreheit = false)
  float hic = dht.computeHeatIndex(t, h, false);

  Serial.print(F("Humidity: "));
  Serial.print(h);
  Serial.print(F("%  Temperature: "));
  Serial.print(t);
  Serial.print(F("°C "));
  Serial.print(f);
  Serial.print(F("°F  Heat index: "));
  Serial.print(hic);
  Serial.print(F("°C "));
  Serial.print(hif);
  Serial.print(F("°F"));
  Serial.print("Blink Delay: ");  
  Serial.println(MEDIUM_BLINK_DELAY);
}
